{\rtf1\ansi\deff0
{\fonttbl{\f3\fnil\fcharset0 Courier New;}
{\f2\fnil\fcharset0 Helvetica;}
{\f1\fnil\fcharset0 Palatino;}
{\f0\fnil\fcharset0 Times New Roman;}
}
{\colortbl;\red255\green0\blue0;}{\stylesheet{\s1 Heading 1;}{\s2 Heading 2;}{\s3 Heading 3;}{\s4 Heading 4;}{\s5 Heading 5;}{\s6 Heading 6;}{\s7 Heading 7;}{\s8 Heading 8;}{\s9 Heading 9;}}
\deflang1024\notabind\facingp\hyphauto1\widowctrl
\sectd\plain\pgwsxn12240\pghsxn15840\marglsxn1920\margrsxn1920\margtsxn1440\margbsxn1200\headery0\footery0\pgndec{\headerl\pard\sl-240\sb770\sa430\plain\tqc\tx4200\tqr\tx8400 {}\tab {}\tab {}\par}{\footerl\pard\sl-240\sb50\sa910\plain\tqc\tx4200\tqr\tx8400 {}\tab {}\tab {}\par}{\headerr\pard\sl-240\sb770\sa430\plain\tqc\tx4200\tqr\tx8400 {}\tab {}\tab {}\par}{\footerr\pard\sl-240\sb50\sa910\plain\tqc\tx4200\tqr\tx8400 {}\tab {}\tab {}\par}\pard\sl20 \fs20\f1 \hyphpar0\par\pard\sb242\s1\sl354\qc \b\fs32\f2 HDF5 Performance Framework User Manual\keepn\hyphpar0\par\pard\sl220 \b0\fs20\f1 \~\hyphpar0\par\pard\sb1288\sl293\qc \b\fs26\f2 Hyo-Kyung Lee\keepn\hyphpar0\par\pard\sl-240 \fs22\cf1 The HDF Group\hyphpar0\par\page\pard\sl20 \b0\fs20\f1\cf0 \hyphpar0\par\pard\sl-240 \b\f2 HDF5 Performance Framework User Manual\hyphpar0\par\pard\sl220 \b0\f1 by\~Hyo-Kyung Lee\hyphpar0\par\pard\sb220\sl220 Copyright\~\'a9\~ \hyphpar0\par\pard\sl220 HDF5 Performance Framework User Manual Version 0.1\~Edition \hyphpar0\par\pard\sl220 Published 2009\hyphpar0\par\pard\sl220 2009 The HDF Group\hyphpar0\par\sect\sectd\plain\pgwsxn12240\pghsxn15840\marglsxn1920\margrsxn1920\margtsxn1440\margbsxn1200\headery0\footery0\pgnlcrm\titlepg{\headerf\pard\sl-240\sb770\sa430\plain\tqc\tx4200\tqr\tx8400 {}\tab {}\tab {}\par}{\footerf\pard\sl-240\sb50\sa910\plain\tqc\tx4200\tqr\tx8400 {}\tab {}\tab {\i\fs20\f1 \chpgn }\par}{\headerl\pard\sl-240\sb770\sa430\plain\tqc\tx4200\tqr\tx8400 {}\tab {}\tab {}\par}{\footerl\pard\sl-240\sb50\sa910\plain\tqc\tx4200\tqr\tx8400 {\i\fs20\f1 \chpgn }\tab {}\tab {}\par}{\headerr\pard\sl-240\sb770\sa430\plain\tqc\tx4200\tqr\tx8400 {}\tab {}\tab {}\par}{\footerr\pard\sl-240\sb50\sa910\plain\tqc\tx4200\tqr\tx8400 {}\tab {}\tab {\i\fs20\f1 \chpgn }\par}\pard\sb220\s1\sl322 \b\fs29\f2 Table of Contents\keepn\hyphpar0\par\pard\sb146\li1440\sl220\fi-480 {\field{\*\fldinst   HYPERLINK  \\l _13 }{\fldrslt \fs20\f1 1. Introduction to HPF}}\fs20\f1 \tqr\tldot\tx8400\tab {\field{\*\fldinst   HYPERLINK  \\l _13 }{\fldrslt {\field\flddirty{\*\fldinst PAGEREF _13}{\fldrslt 000}}}}\keepn\hyphpar0\par\pard\sb48\li1920\sl220\fi-480 {\field{\*\fldinst   HYPERLINK  \\l _16 }{\fldrslt \b0 1.1 What is HDF5 Performance Framework(HPF)?}}\b0 \tqr\tldot\tx8400\tab {\field{\*\fldinst   HYPERLINK  \\l _16 }{\fldrslt {\field\flddirty{\*\fldinst PAGEREF _16}{\fldrslt 000}}}}\hyphpar0\par\pard\li1920\sl220\fi-480 {\field{\*\fldinst   HYPERLINK  \\l _22 }{\fldrslt 1.2 On what systems does HPF run?}}\tqr\tldot\tx8400\tab {\field{\*\fldinst   HYPERLINK  \\l _22 }{\fldrslt {\field\flddirty{\*\fldinst PAGEREF _22}{\fldrslt 000}}}}\hyphpar0\par\pard\li1920\sl220\fi-480 {\field{\*\fldinst   HYPERLINK  \\l _33 }{\fldrslt 1.3 Why should I use HPF?}}\tqr\tldot\tx8400\tab {\field{\*\fldinst   HYPERLINK  \\l _33 }{\fldrslt {\field\flddirty{\*\fldinst PAGEREF _33}{\fldrslt 000}}}}\hyphpar0\par\pard\li1920\sl220\fi-480 {\field{\*\fldinst   HYPERLINK  \\l _37 }{\fldrslt 1.4 What is included with HPF?}}\tqr\tldot\tx8400\tab {\field{\*\fldinst   HYPERLINK  \\l _37 }{\fldrslt {\field\flddirty{\*\fldinst PAGEREF _37}{\fldrslt 000}}}}\hyphpar0\par\pard\sb48\li1440\sl220\fi-480 {\field{\*\fldinst   HYPERLINK  \\l _60 }{\fldrslt \b 2. Getting to know HPF}}\b \tqr\tldot\tx8400\tab {\field{\*\fldinst   HYPERLINK  \\l _60 }{\fldrslt {\field\flddirty{\*\fldinst PAGEREF _60}{\fldrslt 000}}}}\keepn\hyphpar0\par\pard\sb48\li1920\sl220\fi-480 {\field{\*\fldinst   HYPERLINK  \\l _62 }{\fldrslt \b0 2.1 Web Pages}}\b0 \tqr\tldot\tx8400\tab {\field{\*\fldinst   HYPERLINK  \\l _62 }{\fldrslt {\field\flddirty{\*\fldinst PAGEREF _62}{\fldrslt 000}}}}\hyphpar0\par\pard\li1920\sl220\fi-480 {\field{\*\fldinst   HYPERLINK  \\l _66 }{\fldrslt 2.2 Reporting Bugs}}\tqr\tldot\tx8400\tab {\field{\*\fldinst   HYPERLINK  \\l _66 }{\fldrslt {\field\flddirty{\*\fldinst PAGEREF _66}{\fldrslt 000}}}}\hyphpar0\par\pard\sb48\li1440\sl220\fi-480 {\field{\*\fldinst   HYPERLINK  \\l _72 }{\fldrslt \b 3. HPF Installation Guide}}\b \tqr\tldot\tx8400\tab {\field{\*\fldinst   HYPERLINK  \\l _72 }{\fldrslt {\field\flddirty{\*\fldinst PAGEREF _72}{\fldrslt 000}}}}\keepn\hyphpar0\par\pard\sb48\li1920\sl220\fi-480 {\field{\*\fldinst   HYPERLINK  \\l _74 }{\fldrslt \b0 3.1 Pre-installation checklist}}\b0 \tqr\tldot\tx8400\tab {\field{\*\fldinst   HYPERLINK  \\l _74 }{\fldrslt {\field\flddirty{\*\fldinst PAGEREF _74}{\fldrslt 000}}}}\hyphpar0\par\pard\li1920\sl220\fi-480 {\field{\*\fldinst   HYPERLINK  \\l _89 }{\fldrslt 3.2 Creating Database and Tables}}\tqr\tldot\tx8400\tab {\field{\*\fldinst   HYPERLINK  \\l _89 }{\fldrslt {\field\flddirty{\*\fldinst PAGEREF _89}{\fldrslt 000}}}}\hyphpar0\par\pard\li1920\sl220\fi-480 {\field{\*\fldinst   HYPERLINK  \\l _96 }{\fldrslt 3.3 Modification of Source Codes}}\tqr\tldot\tx8400\tab {\field{\*\fldinst   HYPERLINK  \\l _96 }{\fldrslt {\field\flddirty{\*\fldinst PAGEREF _96}{\fldrslt 000}}}}\hyphpar0\par\pard\li1920\sl220\fi-480 {\field{\*\fldinst   HYPERLINK  \\l _117 }{\fldrslt 3.4 Customization of Shell Scripts}}\tqr\tldot\tx8400\tab {\field{\*\fldinst   HYPERLINK  \\l _117 }{\fldrslt {\field\flddirty{\*\fldinst PAGEREF _117}{\fldrslt 000}}}}\hyphpar0\par\pard\li1920\sl220\fi-480 {\field{\*\fldinst   HYPERLINK  \\l _138 }{\fldrslt 3.5 Cron Job Installation}}\tqr\tldot\tx8400\tab {\field{\*\fldinst   HYPERLINK  \\l _138 }{\fldrslt {\field\flddirty{\*\fldinst PAGEREF _138}{\fldrslt 000}}}}\hyphpar0\par\pard\li1920\sl220\fi-480 {\field{\*\fldinst   HYPERLINK  \\l _163 }{\fldrslt 3.6 Web Page Installation}}\tqr\tldot\tx8400\tab {\field{\*\fldinst   HYPERLINK  \\l _163 }{\fldrslt {\field\flddirty{\*\fldinst PAGEREF _163}{\fldrslt 000}}}}\hyphpar0\par\pard\sb48\li1440\sl220\fi-480 {\field{\*\fldinst   HYPERLINK  \\l _174 }{\fldrslt \b 4. Writing Custom Benchmark Program}}\b \tqr\tldot\tx8400\tab {\field{\*\fldinst   HYPERLINK  \\l _174 }{\fldrslt {\field\flddirty{\*\fldinst PAGEREF _174}{\fldrslt 000}}}}\keepn\hyphpar0\par\pard\sb48\li1920\sl220\fi-480 {\field{\*\fldinst   HYPERLINK  \\l _177 }{\fldrslt \b0 4.1 Overview}}\b0 \tqr\tldot\tx8400\tab {\field{\*\fldinst   HYPERLINK  \\l _177 }{\fldrslt {\field\flddirty{\*\fldinst PAGEREF _177}{\fldrslt 000}}}}\hyphpar0\par\pard\li1920\sl220\fi-480 {\field{\*\fldinst   HYPERLINK  \\l _210 }{\fldrslt 4.2 Creating Custom Routine, Action and Instance Name}}\tqr\tldot\tx8400\tab {\field{\*\fldinst   HYPERLINK  \\l _210 }{\fldrslt {\field\flddirty{\*\fldinst PAGEREF _210}{\fldrslt 000}}}}\hyphpar0\par\pard\li1920\sl220\fi-480 {\field{\*\fldinst   HYPERLINK  \\l _229 }{\fldrslt 4.3 Measuring Custom Benchmark Program Performance}}\tqr\tldot\tx8400\tab {\field{\*\fldinst   HYPERLINK  \\l _229 }{\fldrslt {\field\flddirty{\*\fldinst PAGEREF _229}{\fldrslt 000}}}}\hyphpar0\par\pard\sb48\li1440\sl220\fi-480 {\field{\*\fldinst   HYPERLINK  \\l _243 }{\fldrslt \b 5. Testing HPF}}\b \tqr\tldot\tx8400\tab {\field{\*\fldinst   HYPERLINK  \\l _243 }{\fldrslt {\field\flddirty{\*\fldinst PAGEREF _243}{\fldrslt 000}}}}\keepn\hyphpar0\par\pard\sb48\li1920\sl220\fi-480 {\field{\*\fldinst   HYPERLINK  \\l _245 }{\fldrslt \b0 5.1 Testing Back-end}}\b0 \tqr\tldot\tx8400\tab {\field{\*\fldinst   HYPERLINK  \\l _245 }{\fldrslt {\field\flddirty{\*\fldinst PAGEREF _245}{\fldrslt 000}}}}\hyphpar0\par\pard\li1920\sl220\fi-480 {\field{\*\fldinst   HYPERLINK  \\l _262 }{\fldrslt 5.2 Testing Front-end}}\tqr\tldot\tx8400\tab {\field{\*\fldinst   HYPERLINK  \\l _262 }{\fldrslt {\field\flddirty{\*\fldinst PAGEREF _262}{\fldrslt 000}}}}\hyphpar0\par\pard\sb48\li1440\sl220\fi-480 {\field{\*\fldinst   HYPERLINK  \\l _271 }{\fldrslt \b 6. HPF Maintenance}}\b \tqr\tldot\tx8400\tab {\field{\*\fldinst   HYPERLINK  \\l _271 }{\fldrslt {\field\flddirty{\*\fldinst PAGEREF _271}{\fldrslt 000}}}}\keepn\hyphpar0\par\pard\sb48\li1920\sl220\fi-480 {\field{\*\fldinst   HYPERLINK  \\l _274 }{\fldrslt \b0 6.1 Recording Missing Data}}\b0 \tqr\tldot\tx8400\tab {\field{\*\fldinst   HYPERLINK  \\l _274 }{\fldrslt {\field\flddirty{\*\fldinst PAGEREF _274}{\fldrslt 000}}}}\hyphpar0\par\pard\li1920\sl220\fi-480 {\field{\*\fldinst   HYPERLINK  \\l _285 }{\fldrslt 6.2 Version Change}}\tqr\tldot\tx8400\tab {\field{\*\fldinst   HYPERLINK  \\l _285 }{\fldrslt {\field\flddirty{\*\fldinst PAGEREF _285}{\fldrslt 000}}}}\hyphpar0\par\pard\li1920\sl220\fi-480 {\field{\*\fldinst   HYPERLINK  \\l _313 }{\fldrslt 6.3 Journal Entry}}\tqr\tldot\tx8400\tab {\field{\*\fldinst   HYPERLINK  \\l _313 }{\fldrslt {\field\flddirty{\*\fldinst PAGEREF _313}{\fldrslt 000}}}}\hyphpar0\par\pard\sl-240 \f0  \sect\sectd\plain\pgwsxn12240\pghsxn15840\marglsxn1920\margrsxn1920\margtsxn1440\margbsxn1200\headery0\footery0\pgndec\pgnrestart\titlepg{\headerf\pard\sl-240\sb770\sa430\plain\tqc\tx4200\tqr\tx8400 {}\tab {}\tab {}\par}{\footerf\pard\sl-240\sb50\sa910\plain\tqc\tx4200\tqr\tx8400 {}\tab {}\tab {\i\fs20\f1 \chpgn }\par}{\headerl\pard\sl-240\sb770\sa430\plain\tqc\tx4200\tqr\tx8400 {\i\fs20\f1 Chapter 1. Introduction to HPF}\tab {}\tab {}\par}{\footerl\pard\sl-240\sb50\sa910\plain\tqc\tx4200\tqr\tx8400 {\i\fs20\f1 \chpgn }\tab {}\tab {}\par}{\headerr\pard\sl-240\sb770\sa430\plain\tqc\tx4200\tqr\tx8400 {}\tab {}\tab {\i\fs20\f1 Chapter 1. Introduction to HPF}\par}{\footerr\pard\sl-240\sb50\sa910\plain\tqc\tx4200\tqr\tx8400 {}\tab {}\tab {\i\fs20\f1 \chpgn }\par}\pard\sb220\s1\sl322 {\*\bkmkstart _13}{\*\bkmkend _13}\b\fs29\f2 Chapter 1. Introduction to HPF\keepn\hyphpar0\par\pard\sb146\li960\sl220\qj \b0\fs20\lang1033\f1 This HDF5 Performance Framework (HPF) user manual was created to help users quickly learn how to test HDF5 library performance. It covers the basic concept and usage of HPF.\hyphpar0\par\pard\sb200\s2\sl293 {\*\bkmkstart _16}{\*\bkmkend _16}\b\fs26\lang1024\f2 1.1 What is HDF5 Performance Framework(HPF)?\keepn\hyphpar0\par\pard\sb133\li960\sl220\qj \b0\fs20\lang1033\f1 HPF is a free performance testing system for HDF5 library and its applications. Although this project is aimed for HDF5, HPF is a very general-purpose benchmarking tool and can be applied to any applications.\hyphpar0\par\pard\sb100\li960\sl220\qj It measures the time that custom benchmark programs took via \fs18\f3 gettimeofday()\fs20\f1  function call. It doesn't measure any disk or memory space usage yet. And it has a web-based graphical user interface for analysis of the measured time data.\hyphpar0\par\pard\sb100\li960\sl220\qj The HPF testing model is to run benchmark programs daily. Any changes in HDF5 library may or may not affect the daily performance of the existing benchmark programs and the goal of HPF is to monitor the long term performance of HDF5 library. Also, since HDF has different versions of libraries and runs on different platforms, we made HPF allow testing multiple versions on multiple platforms.\hyphpar0\par\pard\sb200\s2\sl293 {\*\bkmkstart _22}{\*\bkmkend _22}\b\fs26\lang1024\f2 1.2 On what systems does HPF run?\keepn\hyphpar0\par\pard\sb133\li960\sl220\qj \b0\fs20\lang1033\f1 As of September 2009, HPF runs on the following platforms:\hyphpar0\par\pard\sb100\li1160\sl220\fi-200\qj \tx1160 \fs16\lang1024 \'95\tab \fs20 32-bit Linux:kernel 2.6.x\hyphpar0\par\pard\sb100\li1160\sl220\fi-200\qj \tx1160 \fs16 \'95\tab \fs20 Solaris 5.10\hyphpar0\par\pard\sb100\li1160\sl220\fi-200\qj \tx1160 \fs16 \'95\tab \fs20 64-bit Linux:kernel 2.6.x\hyphpar0\par\pard\sb100\li960\sl220\qj \lang1033 In general, it can run on any UNIX platform that supports HDF5 library.\hyphpar0\par\pard\sb200\s2\sl293 {\*\bkmkstart _33}{\*\bkmkend _33}\b\fs26\lang1024\f2 1.3 Why should I use HPF?\keepn\hyphpar0\par\pard\sb133\li960\sl220\qj \b0\fs20\lang1033\f1 HPF can provide a quick way of identifying not only HDF library compilation problems on many platforms but also potential performance issues of the library. HPF generates a daily warning report if there's a compilation error or a benchmark takes longer than 20% or more. Users can quickly locate the problem by looking at the daily performance graph. HPF also records the subversion revision number used in the library so the library developers can quickly find the source code that caused the performance degradation.\hyphpar0\par\pard\sb100\li960\sl220\qj Thus, HPF helps HDF5 developers to improve HDF5 library performance by providing an interface for quickly spotting the performance issue in their new codes. It is much better to know the potential performance problems as soon as possible instead of realizing a significant performance problem after a couple of weeks, months or years.\hyphpar0\par\pard\sb200\s2\sl293 {\*\bkmkstart _37}{\*\bkmkend _37}\b\fs26\lang1024\f2 1.4 What is included with HPF?\keepn\hyphpar0\par\pard\sb133\li960\sl220\qj \b0\fs20\lang1033\f1 The HPF has three parts: back-end, core and front-end.\hyphpar0\par\pard\sb100\li960\sl220\qj The back-end part is about how to run the tests and how to store the results. It has a shell script and several PHP scripts and all scripts run as as UNIX cron jobs daily. It uses a MySQL database for the long term storage of performance result data.\hyphpar0\par\pard\sb100\li960\sl220\qj The core part is C/C++ performance framework library. This is a collection of wrapper functions that benchmark programs should be compiled and linked together.\hyphpar0\par\pard\sb100\li960\sl220\qj The front-end part is about performance data analysis and visualization. It has PHP and JavaScript scripts including jpgraph package for plotting graphs.\hyphpar0\par\pard\sb100\li960\sl220\qj HPF requires a number of third-party software products, including:\hyphpar0\par\pard\sb100\li1160\sl220\fi-200\qj \tx1160 \fs16\lang1024 \'95\tab \fs20 Apache\hyphpar0\par\pard\sb100\li1160\sl220\fi-200\qj \tx1160 \fs16 \'95\tab \fs20 jpgraph\hyphpar0\par\pard\sb100\li1160\sl220\fi-200\qj \tx1160 \fs16 \'95\tab \fs20 MySQL\hyphpar0\par\pard\sb100\li1160\sl220\fi-200\qj \tx1160 \fs16 \'95\tab \fs20 PHP\hyphpar0\par\pard\sb100\li1160\sl220\fi-200\qj \tx1160 \fs16 \'95\tab \fs20 gd\hyphpar0\par\pard\sb100\li1160\sl220\fi-200\qj \tx1160 \fs16 \'95\tab \fs20 subversion\hyphpar0\par\pard\sb100\li1160\sl220\fi-200\qj \tx1160 \fs16 \'95\tab \fs20 bash\hyphpar0\par\pard\sb100\li960\sl220\qj \lang1033 The jpgraph is included in the HPF distribution.\hyphpar0\par\pard\sb200\sl-240 \lang1024\f0  \sect\sectd\plain\pgwsxn12240\pghsxn15840\marglsxn1920\margrsxn1920\margtsxn1440\margbsxn1200\headery0\footery0\pgndec\titlepg{\headerf\pard\sl-240\sb770\sa430\plain\tqc\tx4200\tqr\tx8400 {}\tab {}\tab {}\par}{\footerf\pard\sl-240\sb50\sa910\plain\tqc\tx4200\tqr\tx8400 {}\tab {}\tab {\i\fs20\f1 \chpgn }\par}{\headerl\pard\sl-240\sb770\sa430\plain\tqc\tx4200\tqr\tx8400 {\i\fs20\f1 Chapter 2. Getting to know HPF}\tab {}\tab {}\par}{\footerl\pard\sl-240\sb50\sa910\plain\tqc\tx4200\tqr\tx8400 {\i\fs20\f1 \chpgn }\tab {}\tab {}\par}{\headerr\pard\sl-240\sb770\sa430\plain\tqc\tx4200\tqr\tx8400 {}\tab {}\tab {\i\fs20\f1 Chapter 2. Getting to know HPF}\par}{\footerr\pard\sl-240\sb50\sa910\plain\tqc\tx4200\tqr\tx8400 {}\tab {}\tab {\i\fs20\f1 \chpgn }\par}\pard\sb220\s1\sl322 {\*\bkmkstart _60}{\*\bkmkend _60}\b\fs29\f2 Chapter 2. Getting to know HPF\keepn\hyphpar0\par\pard\sb200\s2\sl293 {\*\bkmkstart _62}{\*\bkmkend _62}\fs26 2.1 Web Pages\keepn\hyphpar0\par\pard\sb133\sl-240 \b0\fs20\f1  \hyphpar0\par\pard\sb100\li960\sl220\qj \lang1033 The official website for the HPF project is located at: \cf1 http://hdfdap.hdfgroup.uiuc.edu/h5perf/index.html\cf0 .\hyphpar0\par\pard\sb200\s2\sl293 {\*\bkmkstart _66}{\*\bkmkend _66}\b\fs26\lang1024\f2 2.2 Reporting Bugs\keepn\hyphpar0\par\pard\sb133\li960\sl220\qj \b0\fs20\lang1033\f1 Before crying "Bug!", please make sure that the problem is really relevant to HPF. We cannot fix bugs that belong to third-party software products like MySQL and PHP. Also, please try to run \b svn update\b0  on your source tree to see if the bug is already fixed.\hyphpar0\par\pard\sb100\li960\sl220\qj Proper bug reporting is one of the most important responsibilities of end users. Very detailed information is required to diagnose most serious bugs and please identify and include the subversion revision number when you send a bug report to: <\fs18\f3 help@hdfgroup.org\fs20\f1 >\hyphpar0\par\pard\sb200\sl-240 \lang1024\f0  \sect\sectd\plain\pgwsxn12240\pghsxn15840\marglsxn1920\margrsxn1920\margtsxn1440\margbsxn1200\headery0\footery0\pgndec\titlepg{\headerf\pard\sl-240\sb770\sa430\plain\tqc\tx4200\tqr\tx8400 {}\tab {}\tab {}\par}{\footerf\pard\sl-240\sb50\sa910\plain\tqc\tx4200\tqr\tx8400 {}\tab {}\tab {\i\fs20\f1 \chpgn }\par}{\headerl\pard\sl-240\sb770\sa430\plain\tqc\tx4200\tqr\tx8400 {\i\fs20\f1 Chapter 3. HPF Installation Guide}\tab {}\tab {}\par}{\footerl\pard\sl-240\sb50\sa910\plain\tqc\tx4200\tqr\tx8400 {\i\fs20\f1 \chpgn }\tab {}\tab {}\par}{\headerr\pard\sl-240\sb770\sa430\plain\tqc\tx4200\tqr\tx8400 {}\tab {}\tab {\i\fs20\f1 Chapter 3. HPF Installation Guide}\par}{\footerr\pard\sl-240\sb50\sa910\plain\tqc\tx4200\tqr\tx8400 {}\tab {}\tab {\i\fs20\f1 \chpgn }\par}\pard\sb220\s1\sl322 {\*\bkmkstart _72}{\*\bkmkend _72}\b\fs29\f2 Chapter 3. HPF Installation Guide\keepn\hyphpar0\par\pard\sb200\s2\sl293 {\*\bkmkstart _74}{\*\bkmkend _74}\fs26 3.1 Pre-installation checklist\keepn\hyphpar0\par\pard\sb133\li960\sl220\qj \b0\fs20\lang1033\f1 Before installing HPF, you need to make sure that the following programs are already installed:\hyphpar0\par\pard\sb100\li1160\sl220\fi-200\qj \tx1160 \fs16\lang1024 \'95\tab \fs20 svn\hyphpar0\par\pard\sb100\li1160\sl220\fi-200\qj \tx1160 \fs16 \'95\tab \fs20 MySQL database\hyphpar0\par\pard\sb100\li1160\sl220\fi-200\qj \tx1160 \fs16 \'95\tab \fs20 PHP-enabled web server with gd library\hyphpar0\par\pard\sb100\li1160\sl220\fi-200\qj \tx1160 \fs16 \'95\tab \fs20 PHP with command line interface and MySQL module\hyphpar0\par\pard\sb100\li960\sl220\qj \lang1033 Of course, you need all the necessary software including GNU autotools and a C/C++ compiler to build HDF5 library.\hyphpar0\par\pard\sb100\li960\sl220\qj The first step of using HPF is to get the HPF source codes from subversion repository. \hyphpar0\par\pard\sb200\li960\sl198\qj \fs18\f3  %svn co http://svn.hdfgroup.uiuc.edu/hdf5perf\hyphpar0\par\pard\sb200\s2\sl293 {\*\bkmkstart _89}{\*\bkmkend _89}\b\fs26\lang1024\f2 3.2 Creating Database and Tables\keepn\hyphpar0\par\pard\sb133\li960\sl220\qj \b0\fs20\lang1033\f1 HPF uses a MySQL database as a storage option for HDF5 performance measurement results and system environment variables. The \fs18\f3 hdf5perf/hdf5perflib/lib/cpp/DB.sql\fs20\f1  file contains a set of SQL commands that create necessary tables.\hyphpar0\par\pard\sb100\li960\sl220\qj Issuing a command like \hyphpar0\par\pard\sb200\li960\sl198\qj \fs18\f3   %mysql -u root -p < hdf5perf/hdf5perflib/lib/cpp/DB.sql \sa0\par\fi0\sb0
  # Replace 'root' with your DB admin username\hyphpar0\par\pard\sb200\li960\sl220\qj \fs20\f1 and entering your database password will create a new database called \fs18\f3 hdf5perfsimple\fs20\f1  and all 9 tables necessary for HPF under the new database.\hyphpar0\par\pard\sb200\s2\sl293 {\*\bkmkstart _96}{\*\bkmkend _96}\b\fs26\lang1024\f2 3.3 Modification of Source Codes\keepn\hyphpar0\par\pard\sb133\li960\sl220\qj \b0\fs20\lang1033\f1 HPF distribution comes with a default database username \fs18\f3 root\fs20\f1  and no password in all its source codes and it is necessary to change them if you use a different username/password pair on your MySQL database.\hyphpar0\par\pard\sb100\li960\sl220\qj Here is the list of files that you need to modify: \hyphpar0\par\pard\sb100\li1160\sl220\fi-200\qj \tx1160 \fs16 \'95\tab \fs18\f3 hdf5perf/hdf5perflib/libtest/db.h\hyphpar0\par\pard\sb100\li1160\sl220\fi-200\qj \tx1160 \fs16\f1 \'95\tab \fs18\f3 hdf5perf/hdf5perflib/examples/db.h\hyphpar0\par\pard\sb100\li1160\sl220\fi-200\qj \tx1160 \fs16\f1 \'95\tab \fs18\f3 hdf5perf/hdf5perflib/raw-data/db.h\hyphpar0\par\pard\sb100\li1160\sl220\fi-200\qj \tx1160 \fs16\f1 \'95\tab \fs18\f3 hdf5perf/hdf5perflib/freespace/db.h\hyphpar0\par\pard\sb100\li1160\sl220\fi-200\qj \tx1160 \fs16\f1 \'95\tab \fs18\f3 hdf5perf/hdf5perfphp/hdf/includes/data.inc.php\hyphpar0\par\pard\sb200\s2\sl293 {\*\bkmkstart _117}{\*\bkmkend _117}\b\fs26\lang1024\f2 3.4 Customization of Shell Scripts\keepn\hyphpar0\par\pard\sb133\li960\sl220\qj \b0\fs20\lang1033\f1 Three shell scripts need customization to ensure that they can perform daily tests successfully on time. Here are the three shell scripts you need to modify: \hyphpar0\par\pard\sb100\li1160\sl220\fi-200\qj \tx1160 \fs16 \'95\tab \fs18\f3 hdf5perf/hdf5perfphp/run_1.6.sh\hyphpar0\par\pard\sb100\li1160\sl220\fi-200\qj \tx1160 \fs16\f1 \'95\tab \fs18\f3 hdf5perf/hdf5perfphp/run_1.8.sh\hyphpar0\par\pard\sb100\li1160\sl220\fi-200\qj \tx1160 \fs16\f1 \'95\tab \fs18\f3 hdf5perf/hdf5perfphp/run_1.9.sh\hyphpar0\par\pard\sb100\li960\sl220\qj \fs20\f1 Please pay attention to the choice of compiler, compiler options and paths. Different operating systems may use different command line options for the same command.\hyphpar0\par\pard\sb100\li960\sl220\qj In HPF, all shell script cron jobs should finish within a day (i.e., before 11:59pm) so that analysis and report PHP scripts can run on the next day in sync. The PHP scripts look for the data that have a time-stamp of specific range in MySQL DB. Although you can submit a cron job that starts early to ensure the job to be completed on time, it's also possible to save some time by adjusting the \fs18\f3 INTERVAL\fs20\f1  variable within the shell script.\hyphpar0\par\pard\sb100\li960\sl220\qj Please look for the lines that say: \hyphpar0\par\pard\sb200\li960\sl198\qj \fs18\f3 # This script will run tests 3 times to record the best performance.\sa0\par\fi0\sb0
# Please set the interval in seconds between trials.\sa0\par\fi0\sb0
# 600 seconds = 10 minutes\sa0\par\fi0\sb0
INTERVAL="600"\hyphpar0\par\pard\sb200\li960\sl220\qj \fs20\f1 and make it shorter if necessary.\hyphpar0\par\pard\sb100\li960\sl220\qj Finally, it is not recommended to modify the lines below the following comments: \hyphpar0\par\pard\sb200\li960\sl198\qj \fs18\f3 ###############################################################################\sa0\par\fi0\sb0
# Please DO NOT edit lines below.\sa0\par\fi0\sb0
###############################################################################\hyphpar0\par\pard\sb200\li960\sl220\qj \fs20\f1 It is also a very good idea to test the customized script at the command prompt before submitting the cron job.\hyphpar0\par\pard\sb200\s2\sl293 {\*\bkmkstart _138}{\*\bkmkend _138}\b\fs26\lang1024\f2 3.5 Cron Job Installation\keepn\hyphpar0\par\pard\sb133\li960\sl220\qj \b0\fs20\lang1033\f1 Once all DB creation, modification and customization are done, you are ready to submit cron jobs for the following scripts: \hyphpar0\par\pard\sb100\li1160\sl220\fi-200\qj \tx1160 \fs16 \'95\tab \fs18\f3 hdf5perf/hdf5perfphp/run_1.6.sh\hyphpar0\par\pard\sb100\li1160\sl220\fi-200\qj \tx1160 \fs16\f1 \'95\tab \fs18\f3 hdf5perf/hdf5perfphp/run_1.8.sh\hyphpar0\par\pard\sb100\li1160\sl220\fi-200\qj \tx1160 \fs16\f1 \'95\tab \fs18\f3 hdf5perf/hdf5perfphp/run_1.9.sh\hyphpar0\par\pard\sb100\li1160\sl220\fi-200\qj \tx1160 \fs16\f1 \'95\tab \fs18\f3 php hdf5perf/hdf5perfphp/hdf/sync.php \hyphpar0\par\pard\sb100\li1160\sl220\fi-200\qj \tx1160 \fs16\f1 \'95\tab \fs18\f3 php hdf5perf/hdf5perfphp/hdf/mailer.php \hyphpar0\par\pard\sb100\li960\sl220\qj \fs20\f1 Here's an example cron job table listing on hdfdap.hdfgroup.uiuc.edu machine at The HDF Group: \hyphpar0\par\pard\sb200\li960\sl198\qj \fs18\f3     00 18 * * * /hdf5perf/hdf5perfphp/run_1.6.sh\sa0\par\fi0\sb0
    00 20 * * * /hdf5perf/hdf5perfphp/run_1.8.sh\sa0\par\fi0\sb0
    00 22 * * * /hdf5perf/hdf5perfphp/run_1.9.sh\sa0\par\fi0\sb0
    15 01 * * * /usr/bin/php /hdf5perf/hdf5perfphp/hdf/sync.php\sa0\par\fi0\sb0
    55 01 * * * /usr/bin/php /hdf5perf/hdf5perfphp/hdf/mailer.php\hyphpar0\par\pard\sb200\li960\sl220\qj \fs20\f1 The above example tells us that the HDF5 library version 1.6 testing starts at 6:00pm, HDF5 library version 1.8 at 8:00pm and version 1.9 at 10:00pm on hdfdap.hdfgroup.uiuc.edu machine.\hyphpar0\par\pard\sb100\li960\sl220\qj You should not install the sync.php and mailer.php cron jobs for the machines (e.g., linew, smirom and jam) that do not run the HPF MySQL database since they need to be run only once from the machine that collects all data using a MySQL database. \hyphpar0\par\pard\sb100\li960\sl220\qj The sync.php cleans up any duplicate entries from the routine and action tables in the database and ensure that the front-end system can run smoothly.\hyphpar0\par\pard\sb100\li960\sl220\qj The mailer.php script sends an e-mail notification to subscribers if there is a significant increase in performance.\hyphpar0\par\pard\sb200\s2\sl293 {\*\bkmkstart _163}{\*\bkmkend _163}\b\fs26\lang1024\f2 3.6 Web Page Installation\keepn\hyphpar0\par\pard\sb133\li960\sl220\qj \b0\fs20\lang1033\f1 Simply point your web server's document root to \fs18\f3 hdf5perf/hdf5perfphp/hdf/\fs20\f1 . Some web servers are configured to look for \fs18\f3 index.php\fs20\f1  first instead of \fs18\f3 index.html\fs20\f1 . The main web page of HPF is \fs18\f3 hdf5perf/hdf5perfphp/hdf/index.html\fs20\f1  so you should browse it through \cf1 http://your_web_server/index.html\cf0 . If it's installed successfully, the web page should look like the below:\hyphpar0\par\pard\sb200\li960{\field\flddirty{\*\fldinst INCLUDEPICTURE "hpf_index.png" }{\fldrslt }}\par\pard\sb200\sl-240 \lang1024\f0  \sect\sectd\plain\pgwsxn12240\pghsxn15840\marglsxn1920\margrsxn1920\margtsxn1440\margbsxn1200\headery0\footery0\pgndec\titlepg{\headerf\pard\sl-240\sb770\sa430\plain\tqc\tx4200\tqr\tx8400 {}\tab {}\tab {}\par}{\footerf\pard\sl-240\sb50\sa910\plain\tqc\tx4200\tqr\tx8400 {}\tab {}\tab {\i\fs20\f1 \chpgn }\par}{\headerl\pard\sl-240\sb770\sa430\plain\tqc\tx4200\tqr\tx8400 {\i\fs20\f1 Chapter 4. Writing Custom Benchmark Program}\tab {}\tab {}\par}{\footerl\pard\sl-240\sb50\sa910\plain\tqc\tx4200\tqr\tx8400 {\i\fs20\f1 \chpgn }\tab {}\tab {}\par}{\headerr\pard\sl-240\sb770\sa430\plain\tqc\tx4200\tqr\tx8400 {}\tab {}\tab {\i\fs20\f1 Chapter 4. Writing Custom Benchmark Program}\par}{\footerr\pard\sl-240\sb50\sa910\plain\tqc\tx4200\tqr\tx8400 {}\tab {}\tab {\i\fs20\f1 \chpgn }\par}\pard\sb220\s1\sl322 {\*\bkmkstart _174}{\*\bkmkend _174}\b\fs29\f2 Chapter 4. Writing Custom Benchmark Program\keepn\hyphpar0\par\pard\sb146\li960\sl220\qj \b0\fs20\lang1033\f1 In this chapter, we provide a detailed instruction about creating a custom benchmark program. Writing a custom benchmark program requires some knowledge about HPF C-API.\hyphpar0\par\pard\sb200\s2\sl293 {\*\bkmkstart _177}{\*\bkmkend _177}\b\fs26\lang1024\f2 4.1 Overview\keepn\hyphpar0\par\pard\sb133\li960\sl220\qj \b0\fs20\lang1033\f1 To write a custom benchmark program, the following steps are needed:\hyphpar0\par\pard\sb100\li960\sl220\qj Create a directory \fs18\f3 mytest\fs20\f1  under \fs18\f3 hdf5perflib\fs20\f1  source tree.\hyphpar0\par\pard\sb100\li960\sl220\qj Copy files under \fs18\f3 examples/*\fs20\f1  into \fs18\f3 mytest\fs20\f1  using \b cp -r examples/* mytest\b0 .\hyphpar0\par\pard\sb100\li960\sl220\qj Review \fs18\f3 mytest/c/write.c\fs20\f1  and make your own program by modifying benchmark names.\hyphpar0\par\pard\sb100\li960\sl220\qj Make sure that your functions are wrapped around the \fs18\f3 H5Perf_startTimer(& start)\fs20\f1  and the \fs18\f3 H5Perf_endTimer()\fs20\f1  in your program.\hyphpar0\par\pard\sb100\li960\sl220\qj If you've renamed \fs18\f3 write.c\fs20\f1  or created another file, please update \fs18\f3 mytest/c/Makefile.am\fs20\f1  file to include your source codes.\hyphpar0\par\pard\sb100\li960\sl220\qj Modify \fs18\f3 configure.ac\fs20\f1  to include \fs18\f3 mytest/Makefile\fs20\f1  and \fs18\f3 mytest/c/Makefile\fs20\f1  and run \b autoreconf\b0 .\hyphpar0\par\pard\sb100\li960\sl220\qj You may skip step 1, 2, 5, and 6 if you are in a real hurry and minimize the hassle of modifying several makefiles. In that case, you need to modify \fs18\f3 examples/c/write.c\fs20\f1  file directly. In the next two subsections, we'll focus on step 3 and 4 only since the rest of steps are more relevant to GNU autoconf/automake topic.\hyphpar0\par\pard\sb200\s2\sl293 {\*\bkmkstart _210}{\*\bkmkend _210}\b\fs26\lang1024\f2 4.2 Creating Custom Routine, Action and Instance Name\keepn\hyphpar0\par\pard\sb133\li960\sl220\qj \b0\fs20\lang1033\f1 HPF uses a hierarchical model to group benchmark programs. The model has three levels of abstraction - routine, action and instance. One routine can have one or more actions and each action can have one or more instances. Thus, to write a custom benchmark program, the first thing you'll need to do is to decide at least 3 names for each level.\hyphpar0\par\pard\sb100\li960\sl220\qj For example, if you are interested in measuring "write" performance, you may name it as a "write" routine. Then, you may name two actions like "write groups" and "write datasets" under the "write" routine. Finally, you can add two instances like "write 1,000 groups" under the "write groups" action and "write 100 datasets" under the "write datasets" action.\hyphpar0\par\pard\sb200\li960\sl220\qj \lang1024  \hyphpar0\par\pard\li960\sl220\qj  \hyphpar0\par\pard\li960{\field\flddirty{\*\fldinst INCLUDEPICTURE "hpf_benchmark_model.png" }{\fldrslt }}\par\pard\li960\sl220\qj  \keepn\hyphpar0\par\pard\sb100\li960\sl220\qj \b Figure 4-1. An example HPF hierarchical benchmark model\hyphpar0\par\pard\sb200\li960\sl220\qj \b0\lang1033 Once you've decided your names for routine, action and instance, it's time to modify the part of example code with your custom names. At the beginning of \fs18\f3 examples/c/write.c\fs20\f1  program, you can find the main() function. Below the main() function declaration, there are character array variables dedicated for the custom names as shown below:\hyphpar0\par\pard\sb200\li960\sl198\qj \fs18\lang1024\f3 int\sa0\par\fi0\sb0
main (int argc,char *argv[])\sa0\par\fi0\sb0
\{\sa0\par\fi0\sb0
  /* BEGIN: Modify the following variables with your own names. */\sa0\par\fi0\sb0
  /* Names for Test Routine */\sa0\par\fi0\sb0
  char TestRoutine_Name[] = "Write";\sa0\par\fi0\sb0
  char TestRoutine_Desc[] = "A tutorial benchmark program";\sa0\par\fi0\sb0
  char TestRoutine_Version[] = "1.0";\sa0\par\fi0\sb0
  /* Names for Test Action */\sa0\par\fi0\sb0
  char TestAction_Name[] = "Write Dataset";\sa0\par\fi0\sb0
  char TestAction_Desc[] = "H5D Write function test";\sa0\par\fi0\sb0
  /* Names for Test Instance */\sa0\par\fi0\sb0
  char DatasetName[] = "Write 10000 Data";      /* This must be less than 50 characters. */\sa0\par\fi0\sb0
  char DatasetDesc[] = "Writing an array of 10000 integers"; /* This must be less than 250 characters. */\sa0\par\fi0\sb0
  /* END  */\hyphpar0\par\pard\sb200\li960\sl220\qj \fs20\lang1033\f1 You are welcome to modify the content of the variables like \fs18\f3 TestRoutine_Name(TestRoutine_Desc)\fs20\f1 , \fs18\f3 TestAction_Name(TestAction_Desc)\fs20\f1  and \fs18\f3 DatasetName(DatasetDesc)\fs20\f1 . The \fs18\f3 TestRoutine_Version\fs20\f1  can be anything you want it to be since it does not play any significant role in HPF system.\hyphpar0\par\pard\sb100\sl-240 \lang1024  \hyphpar0\par\pard\sb200\s2\sl293 {\*\bkmkstart _229}{\*\bkmkend _229}\b\fs26\f2 4.3 Measuring Custom Benchmark Program Performance\keepn\hyphpar0\par\pard\sb133\li960\sl220\qj \b0\fs20\lang1033\f1 Once you've modified variables for your routine, action and instance names, it's time to measure the performance of your benchmarking program. In this section, we will not cover the details of how to write programs with HDF5 library since there are plenty of tutorial examples on The HDF Group web site. Rather, we'll focus on how to inject your HDF5 program into our tutorial example.\hyphpar0\par\pard\sb100\li960\sl220\qj Adding your own program into HPF is as simple as putting a letter into an envelop. All you have to do is to insert your own program between two API pairs called \fs18\f3 H5Perf_startTimer()\fs20\f1  and \fs18\f3 H5Perf_endTimer()\fs20\f1 . In the \fs18\f3 write.c\fs20\f1  example that we used in the previous subsection, look for the above APIs near line 110. It'll look like below program listing:\hyphpar0\par\pard\sb200\li960\sl198\qj \fs18\lang1024\f3   H5Perf_startTimer(& start);\sa0\par\fi0\sb0
  \sa0\par\fi0\sb0
  /* BEGIN: Insert your custom benchmark program here */\sa0\par\fi0\sb0
  status = H5Dwrite(dataset, H5T_NATIVE_INT, H5S_ALL, H5S_ALL,\sa0\par\fi0\sb0
                    H5P_DEFAULT, data);\sa0\par\fi0\sb0
  /* END */\sa0\par\fi0\sb0
  \sa0\par\fi0\sb0
  time_used = H5Perf_endTimer(start);\hyphpar0\par\pard\sb200\li960\sl220\qj \fs20\lang1033\f1 In the above example, you're measuring the "H5Dwrite" performance of writing "data" which is initialized at the beginning of the \fs18\f3 write.c\fs20\f1  file:\hyphpar0\par\pard\sb200\li960\sl198\qj \fs18\lang1024\f3   /*\sa0\par\fi0\sb0
   * Data and output buffer initialization.\sa0\par\fi0\sb0
   */\sa0\par\fi0\sb0
  data = (int*)malloc(sizeof(int)*dx*dy);\sa0\par\fi0\sb0
  tempdata = data;\sa0\par\fi0\sb0
    \sa0\par\fi0\sb0
  for (j = 0; j < dy; j++) \{\sa0\par\fi0\sb0
    for (i = 0; i < dx; i++)\{\sa0\par\fi0\sb0
      *tempdata = i + j;\sa0\par\fi0\sb0
      tempdata++;\sa0\par\fi0\sb0
    \}\sa0\par\fi0\sb0
  \}\hyphpar0\par\pard\sb200\li960\sl220\qj \fs20\lang1033\f1 As you can see, the "data" initialization is not a part of performance measurement and is done at the beginning of the program. It is important to wrap only the target HDF5 API function(s) when measuring the performance. Don't wrap around other parts of source code since those code may take long time and it may affect the benchmark results accordingly. In our example programs, irrelevant parts like HDF5 file creation are always outside of the two wrapper HPF APIs -- \fs18\f3 H5Perf_startTimer()\fs20\f1  and \fs18\f3 H5Perf_endTiemr()\fs20\f1 .\hyphpar0\par\pard\sb200\sl-240 \lang1024\f0  \sect\sectd\plain\pgwsxn12240\pghsxn15840\marglsxn1920\margrsxn1920\margtsxn1440\margbsxn1200\headery0\footery0\pgndec\titlepg{\headerf\pard\sl-240\sb770\sa430\plain\tqc\tx4200\tqr\tx8400 {}\tab {}\tab {}\par}{\footerf\pard\sl-240\sb50\sa910\plain\tqc\tx4200\tqr\tx8400 {}\tab {}\tab {\i\fs20\f1 \chpgn }\par}{\headerl\pard\sl-240\sb770\sa430\plain\tqc\tx4200\tqr\tx8400 {\i\fs20\f1 Chapter 5. Testing HPF}\tab {}\tab {}\par}{\footerl\pard\sl-240\sb50\sa910\plain\tqc\tx4200\tqr\tx8400 {\i\fs20\f1 \chpgn }\tab {}\tab {}\par}{\headerr\pard\sl-240\sb770\sa430\plain\tqc\tx4200\tqr\tx8400 {}\tab {}\tab {\i\fs20\f1 Chapter 5. Testing HPF}\par}{\footerr\pard\sl-240\sb50\sa910\plain\tqc\tx4200\tqr\tx8400 {}\tab {}\tab {\i\fs20\f1 \chpgn }\par}\pard\sb220\s1\sl322 {\*\bkmkstart _243}{\*\bkmkend _243}\b\fs29\f2 Chapter 5. Testing HPF \keepn\hyphpar0\par\pard\sb200\s2\sl293 {\*\bkmkstart _245}{\*\bkmkend _245}\fs26 5.1 Testing Back-end\keepn\hyphpar0\par\pard\sb133\li960\sl220\qj \b0\fs20\lang1033\f1 HPF testing can be done by running a back-end script like \fs18\f3 run_1.6.sh\fs20\f1 , \fs18\f3 run_1.8.sh\fs20\f1  or \fs18\f3 run_1.9.sh\fs20\f1 . It's a good idea to set \fs18\f3 INTERVAL="0"\fs20\f1  in the script to get a quick result of your test.\hyphpar0\par\pard\sb100\li960\sl220\qj If your script exits without any error, it's important to examine database tables. To examine your data, issue the following command on the MySQL server machine: \hyphpar0\par\pard\sb200\li960\sl198\qj \fs18\f3     %mysql -u root -p hdf5perfsmiple\hyphpar0\par\pard\sb200\li960\sl220\qj \fs20\f1 and then press enter. No password is required by default.\hyphpar0\par\pard\sb100\li960\sl220\qj You can inspect newly recorded data from database by issuing an SQL query like: \hyphpar0\par\pard\sb200\li960\sl198\qj \fs18\f3     mysql>SELECT * from TestInstance WHERE TestInstance_Date > 20091001;\hyphpar0\par\pard\sb200\li960\sl220\qj \fs20\f1 In the above example, it's important to change the date \fs18\f3 20091001\fs20\f1  to today's date. After all your testing is done, you can clean up today(=\fs18\f3 20091001\fs20\f1 )'s data: \hyphpar0\par\pard\sb200\li960\sl198\qj \fs18\f3     mysql>DELETE FROM subversion WHERE checkout_date > 20091001;\sa0\par\fi0\sb0
    mysql>DELETE FROM TestInstance WHERE TestInstance_Date > 20091001;\sa0\par\fi0\sb0
    mysql>DELETE FROM TestInstanceBest WHERE TestInstance_Date > 20091001;\sa0\par\fi0\sb0
    mysql>DELETE FROM environment WHERE env_date > 20091001;\hyphpar0\par\pard\sb200\li960\sl220\qj \fs20\f1 Please don't forget to set \fs18\f3 INTERVAL="600"\fs20\f1  back in your test script. Finally, submit your script as a cron job.\hyphpar0\par\pard\sb200\s2\sl293 {\*\bkmkstart _262}{\*\bkmkend _262}\b\fs26\lang1024\f2 5.2 Testing Front-end\keepn\hyphpar0\par\pard\sb133\li960\sl220\qj \b0\fs20\lang1033\f1 After two days of your cron job installation, it is possible to visualize your performance data. The reason is that any graph rendering by jpgraph requires two or more data points.\hyphpar0\par\pard\sb100\li960\sl220\qj From the HPF main web page, click either "1.9", "1.8" or "1.6" in "See today's graph for version 1.9 1.8 or 1.6" list item. You'll see a line graph that looks like below: \hyphpar0\par\pard\sb200\li960{\field\flddirty{\*\fldinst INCLUDEPICTURE "hpf_graph.png" }{\fldrslt }}\par\pard\sb200\li960\sl220\qj The graph above shows the results of four of eleven example benchmarks used in The HDF Group. (The fifth one is cut due to the screen size.) It shows the last 7 days of benchmark results from the four different machines in The HDF Group - hdfdap, kagiso, linew and smirom. As you can guess from the last date "09/30" at the bottom of the legend, the screenshot was taken on October 1.\hyphpar0\par\pard\sb100\li960\sl220\qj Also from the HPF main web page, click "report" in "See today's warning report." You'll see a lot of warning messages in a table since you have neither 7 nor 30 days of data to compare against in MySQL database. After 7 days of your installation, you'll see that half of the warnings disappear. After one month, you'll see almost no warning messages in the table.\hyphpar0\par\pard\sb200\sl-240 \lang1024\f0  \sect\sectd\plain\pgwsxn12240\pghsxn15840\marglsxn1920\margrsxn1920\margtsxn1440\margbsxn1200\headery0\footery0\pgndec\titlepg{\headerf\pard\sl-240\sb770\sa430\plain\tqc\tx4200\tqr\tx8400 {}\tab {}\tab {}\par}{\footerf\pard\sl-240\sb50\sa910\plain\tqc\tx4200\tqr\tx8400 {}\tab {}\tab {\i\fs20\f1 \chpgn }\par}{\headerl\pard\sl-240\sb770\sa430\plain\tqc\tx4200\tqr\tx8400 {\i\fs20\f1 Chapter 6. HPF Maintenance}\tab {}\tab {}\par}{\footerl\pard\sl-240\sb50\sa910\plain\tqc\tx4200\tqr\tx8400 {\i\fs20\f1 \chpgn }\tab {}\tab {}\par}{\headerr\pard\sl-240\sb770\sa430\plain\tqc\tx4200\tqr\tx8400 {}\tab {}\tab {\i\fs20\f1 Chapter 6. HPF Maintenance}\par}{\footerr\pard\sl-240\sb50\sa910\plain\tqc\tx4200\tqr\tx8400 {}\tab {}\tab {\i\fs20\f1 \chpgn }\par}\pard\sb220\s1\sl322 {\*\bkmkstart _271}{\*\bkmkend _271}\b\fs29\f2 Chapter 6. HPF Maintenance \keepn\hyphpar0\par\pard\sb146\li960\sl220\qj \b0\fs20\lang1033\f1 HPF requires a periodic maintenance like manual data entry and version change.\hyphpar0\par\pard\sb200\s2\sl293 {\*\bkmkstart _274}{\*\bkmkend _274}\b\fs26\lang1024\f2 6.1 Recording Missing Data\keepn\hyphpar0\par\pard\sb133\li960\sl220\qj \b0\fs20\lang1033\f1 Sometimes, the current HPF fails to record the best instance from the three trials. In that case, one can inspect the \fs18\f3 TestInstance\fs20\f1  table and import the best record into \fs18\f3 TestInstanceBest\fs20\f1  table.This can be done using a utility script called \fs18\f3 record_manually.php\fs20\f1 . \hyphpar0\par\pard\sb200\li960\sl198\qj \fs18\f3    %php record_manually.php <hostname> <version>\hyphpar0\par\pard\sb200\li960\sl220\qj \fs20\f1 This will fill in the missing records in TestInstanceBest from TestInstance.\hyphpar0\par\pard\sb100\li960\sl220\qj Check the graph to see if it's recorded properly: \hyphpar0\par\pard\sb200\li960\sl198\qj \fs18\f3    %firefox http://hdfdap.hdfgroup.uiuc.edu/h5perf/today.php\hyphpar0\par\pard\sb200\s2\sl293 {\*\bkmkstart _285}{\*\bkmkend _285}\b\fs26\lang1024\f2 6.2 Version Change\keepn\hyphpar0\par\pard\sb133\li960\sl220\qj \b0\fs20\lang1033\f1 In case there is a version change in HDF5 library from 1.x to 1.y where x is the old version number and y is the new version number, perform the following steps:\hyphpar0\par\pard\sb100\li1160\sl220\fi-200\qj \tx1160 \fs16\lang1024 \'95\tab \fs20 Update the back-end shell script. \hyphpar0\par\pard\sb100\li1160\sl198\qj \fs18\f3   # HDF5 version - 1.9 1.8 or 1.6\sa0\par\fi0\sb0
  # VERSION="1.x"\sa0\par\fi0\sb0
  VERSION="1.y"\hyphpar0\par\pard\sb100\li1160\sl220\fi-200\qj \tx1160 \fs16\f1 \'95\tab \fs20 Rename the temporary directory for environment variables defined in the back-end script. \hyphpar0\par\pard\sb100\li1160\sl198\qj \fs18\f3    mv /tmp/chicago_1.x /tmp/chiago_1.y\hyphpar0\par\pard\sb100\li1160\sl220\fi-200\qj \tx1160 \fs16\f1 \'95\tab \fs20 Update entries in tables if the version change was not planned in advance. \hyphpar0\par\pard\sb100\li1160\sl198\qj \fs18\f3   %php replace_subversion.php\hyphpar0\par\pard\sb100\li1160\sl220\fi-200\qj \tx1160 \fs16\f1 \'95\tab \fs20 Update entries in the \fs18\f3 TestInstanceBest\fs20\f1  and \fs18\f3 TestInstance\fs20\f1  table using the \fs18\f3 replace_version.php\fs20\f1  script. Please modify \fs18\f3 replace_version.php\fs20\f1  and then execute. \hyphpar0\par\pard\sb100\li1160\sl198\qj \fs18\f3    %php replace_version.php\hyphpar0\par\pard\sb100\li1160\sl220\fi-200\qj \tx1160 \fs16\f1 \'95\tab \fs20 Fill in the missing record for each host. \hyphpar0\par\pard\sb100\li1160\sl198\qj \fs18\f3    %php record_manually.php hdfdap 1.y\sa0\par\fi0\sb0
   %php record_manually.php kagiso 1.y\sa0\par\fi0\sb0
   %...\hyphpar0\par\pard\sb100\li1160\sl220\fi-200\qj \tx1160 \fs16\f1 \'95\tab \fs20 Update \fs18\f3 index.html\fs20\f1 , \fs18\f3 mailer.php\fs20\f1 , and \fs18\f3 today.php\fs20\f1 . For each file, look for the lines that have version numbers.\hyphpar0\par\pard\sb200\s2\sl293 {\*\bkmkstart _313}{\*\bkmkend _313}\b\fs26\f2 6.3 Journal Entry\keepn\hyphpar0\par\pard\sb133\li960\sl220\qj \b0\fs20\lang1033\f1 Finally, it's good to add a journal entry whenever you did some maintenance work. Although this journal feature is optional in HPF, it can be a very useful tool for documenting what affected the benchmark results. For example, HPF may fail due to a network interruption, a MySQL DB failure, and a full file system. If such extra ordinary event occurs, you can write a log easily with the journal form provided by HPF.\hyphpar0\par\pard\sb100\li960\sl220\qj In HPF, there is a dedicated MySQL table called "journal" and you can easily add a new entry and view it later. To add a journal entry, click the "Add" link in the "Add / View journal entry" on the HPF main web page. An HTML form will appear and it'll ask a confirmation with preview page once you filled out the form. To view the entire content of the "journal" table, click the "View" link.\hyphpar0\par}
